using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace WpfAppPOS1.Migrations
{
    /// <inheritdoc />
    public partial class mgg5 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1002,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 181, 136, 102, 23, 109, 44, 204, 176, 252, 133, 138, 178, 70, 160, 248, 219, 42, 120, 60, 200, 86, 91, 120, 238, 12, 216, 161, 10, 135, 165, 60, 103, 183, 234, 9, 26, 184, 152, 119, 194, 254, 219, 176, 183, 227, 83, 102, 189, 162, 250, 39, 144, 113, 252, 220, 7, 66, 99, 187, 212, 191, 4, 122, 164 }, new byte[] { 129, 227, 11, 112, 57, 80, 187, 167, 36, 11, 96, 26, 157, 31, 87, 239, 233, 242, 23, 202, 69, 72, 26, 224, 16, 19, 208, 130, 164, 13, 210, 82, 15, 223, 156, 191, 84, 209, 39, 190, 161, 21, 35, 199, 173, 208, 66, 224, 102, 27, 154, 56, 24, 106, 255, 115, 245, 239, 45, 18, 125, 97, 171, 240, 222, 43, 69, 183, 51, 237, 199, 35, 240, 226, 138, 17, 249, 165, 89, 202, 67, 100, 69, 96, 151, 179, 23, 242, 117, 182, 8, 140, 5, 131, 243, 140, 125, 136, 172, 132, 18, 21, 27, 85, 35, 186, 213, 190, 113, 92, 214, 123, 46, 13, 233, 236, 230, 38, 57, 48, 140, 30, 64, 170, 36, 193, 11, 25 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1002,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 255, 52, 161, 129, 199, 63, 205, 143, 182, 12, 74, 210, 142, 44, 139, 34, 70, 156, 119, 209, 130, 232, 31, 159, 105, 109, 232, 58, 17, 20, 132, 18, 83, 153, 133, 200, 40, 94, 194, 193, 69, 97, 124, 11, 122, 6, 172, 85, 80, 166, 13, 87, 68, 42, 178, 17, 36, 36, 150, 136, 157, 124, 113, 97 }, new byte[] { 206, 81, 138, 185, 217, 190, 171, 185, 119, 115, 235, 203, 166, 254, 158, 80, 189, 211, 251, 184, 44, 249, 126, 125, 24, 168, 34, 215, 112, 208, 176, 37, 4, 225, 135, 68, 248, 202, 245, 78, 72, 72, 112, 202, 23, 126, 255, 71, 202, 212, 233, 193, 36, 165, 133, 94, 252, 109, 199, 12, 238, 44, 119, 29, 45, 150, 161, 217, 177, 22, 35, 18, 138, 19, 0, 58, 158, 8, 91, 126, 92, 129, 109, 72, 64, 240, 209, 147, 163, 137, 236, 214, 66, 214, 104, 252, 182, 197, 212, 21, 175, 126, 101, 140, 215, 74, 13, 224, 40, 141, 128, 177, 252, 132, 178, 236, 69, 94, 138, 146, 47, 179, 73, 111, 205, 117, 56, 72 } });
        }
    }
}
