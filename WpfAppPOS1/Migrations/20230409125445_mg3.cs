using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace WpfAppPOS1.Migrations
{
    /// <inheritdoc />
    public partial class mg3 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1002,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 216, 148, 7, 44, 42, 72, 120, 17, 70, 75, 173, 36, 109, 5, 207, 63, 246, 239, 27, 153, 153, 117, 218, 254, 12, 174, 3, 15, 84, 46, 168, 26, 66, 39, 17, 20, 66, 219, 170, 21, 60, 178, 12, 128, 36, 48, 5, 251, 217, 221, 183, 75, 29, 96, 187, 197, 137, 198, 101, 72, 112, 76, 204, 65 }, new byte[] { 113, 164, 255, 192, 60, 239, 142, 68, 106, 32, 12, 66, 76, 54, 24, 152, 183, 19, 180, 87, 121, 58, 207, 199, 102, 71, 191, 198, 58, 20, 114, 63, 14, 94, 236, 160, 181, 128, 176, 142, 78, 140, 121, 187, 135, 237, 23, 106, 45, 133, 178, 124, 175, 72, 219, 6, 71, 76, 25, 37, 162, 74, 78, 198, 26, 22, 89, 32, 35, 194, 41, 61, 189, 227, 237, 152, 29, 86, 234, 234, 225, 198, 214, 39, 61, 151, 58, 195, 19, 242, 81, 220, 159, 83, 196, 144, 36, 217, 248, 36, 64, 167, 132, 136, 20, 87, 138, 148, 140, 37, 224, 161, 46, 10, 241, 16, 135, 239, 11, 19, 73, 205, 227, 213, 254, 136, 85, 175 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1002,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 203, 18, 237, 189, 54, 108, 86, 125, 219, 170, 46, 164, 189, 219, 236, 253, 211, 164, 148, 255, 180, 169, 138, 245, 54, 158, 239, 41, 185, 251, 99, 253, 62, 110, 126, 217, 6, 51, 232, 54, 108, 165, 48, 25, 231, 33, 249, 217, 183, 15, 111, 237, 78, 224, 114, 206, 78, 50, 56, 131, 176, 14, 47, 209 }, new byte[] { 56, 21, 249, 246, 14, 203, 101, 186, 164, 151, 198, 193, 2, 179, 98, 211, 10, 240, 225, 24, 118, 203, 104, 189, 255, 121, 36, 6, 138, 6, 169, 195, 191, 236, 148, 162, 29, 44, 73, 234, 186, 136, 95, 108, 57, 128, 208, 234, 121, 150, 132, 255, 65, 116, 100, 234, 85, 164, 74, 188, 129, 201, 0, 15, 200, 43, 150, 100, 2, 76, 65, 30, 66, 87, 23, 66, 155, 83, 161, 252, 46, 149, 111, 141, 35, 33, 236, 253, 214, 137, 229, 14, 210, 53, 226, 254, 197, 92, 213, 215, 246, 64, 203, 55, 65, 167, 139, 125, 196, 133, 67, 209, 59, 26, 45, 26, 23, 126, 48, 225, 53, 198, 110, 77, 77, 237, 204, 129 } });
        }
    }
}
